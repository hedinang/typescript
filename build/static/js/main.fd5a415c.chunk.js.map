{"version":3,"sources":["components/Dropdown.tsx","components/Navbar.js","components/pages/Home.tsx","components/model/threeDModel.jsx","components/introduce/IntroduceThreeD.tsx","components/pages/ThreeD.jsx","components/pages/Ar.tsx","components/pages/Animation.tsx","App.tsx","index.tsx"],"names":["DropdownDesktop","useState","showChildren","setShowChildren","style","display","gridTemplateColumns","gridGap","alignItems","listStyle","textAlign","width","justifyContent","marginRight","color","to","onMouseEnter","e","onMouseLeave","height","paddingTop","className","borderRadius","right","fontSize","position","top","background","Row","paddingLeft","Col","xs","DropdownMobile","props","showParent","setShowParent","useEffect","click","backgroundColor","left","onClick","Dropdown","responsive","Navbar","setClick","logo","setResponsive","handleResize","window","innerWidth","addEventListener","src","Home","Chair","useGLTF","nodes","materials","textureList","TextureLoader","load","useRef","name","isSelect","items","setItems","tmp","map","choose","f","changeItem","scale","dispose","geometry","back","material","laces","attach","cushions","base","legs","supports","mouse","x","y","Circle","dx","dy","radius","ctx","w","h","c","maxRadius","this","Map","set","draw","beginPath","arc","Math","PI","strokeStyle","stroke","fillStyle","fill","IntroduceThreeDesktop","ref","circleList","colorList","splits","split","lines","start","seperate","line","lineLength","length","push","current","canvas","getContext","index","random","min","max","floor","animate","connections","clearRect","interaction","update","size","lineWidth","queueElement","shift","i","element","moveTo","get","lineTo","font","fillText","requestAnimationFrame","onMouseMove","clientX","clientY","IntroduceThreeMobile","maxLineLength","longestLine","Introduce","ContentDesktop","setColor","item","setItem","changeTexture","backgroundImage","camera","OrbitControls","ContentMobile","marginLeft","borderWidth","borderStyle","borderColor","ThreeD","setLongestLine","content","setContent","Box","children","rest","args","Button","hover","setHover","onHover","onBlur","onSelect","Ar","Animation","App","fallback","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd5a415c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Col, Row } from 'react-bootstrap'\nimport './Navbar.css';\n\nfunction DropdownDesktop() {\n  let [showChildren, setShowChildren] = useState('none')\n  const onMouseEnter = (e: any) => {\n    setShowChildren('block')\n\n  }\n\n  const onMouseLeave = (e: any) => {\n    setShowChildren('none')\n\n  }\n  return (\n    <>\n      <ul\n        style={{\n          display: 'grid', gridTemplateColumns: 'repeat(5, auto)', gridGap: '10px', alignItems: 'center',\n          listStyle: 'none', textAlign: 'center', width: '50vw', justifyContent: 'end', marginRight: '2rem'\n        }}\n      >\n        <li style={{ textAlign: 'left' }}>\n          <Link style={{ color: 'white' }} to='/' >\n            Home\n        </Link>\n        </li>\n        <li onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} style={{ height: '80px', textAlign: 'left', display: 'flex' }}>\n          <div style={{ paddingTop: '26px' }}>Product <i className='fas fa-caret-down' /></div>\n          <ul\n            style={{\n              borderRadius: '5px', right: '0',\n              fontSize: '1rem',\n              width: '44rem',\n              height: '10rem',\n              position: 'absolute',\n              top: '80px',\n              background: '#bbeffd', display: `${showChildren}`\n\n            }}\n          >\n            <Row style={{\n              paddingLeft: '2rem', paddingTop: '2rem',\n            }}>\n              <Col xs={4}>\n                <div>\n                  <Link to='/product'>3D/VR/AR</Link>\n                </div>\n                <div>\n                  <Link to='/product/od'>Object Detection</Link>\n                </div>\n                <div>\n                  <Link to='/product/ocr'>Optical Character Recognition</Link>\n                </div>\n                <div>\n                  <Link to='/product/is'>Image Synthesis</Link>\n                </div>\n              </Col>\n              <Col xs={3}>\n                <div>\n                  <Link to='/product/tts'>Text To Speech</Link>\n                </div>\n                <div>\n                  <Link to='/product/stt'>Speech To Text</Link>\n                </div>\n                <div>\n                  <Link to='/product/ss'>Speech Synthesis</Link>\n                </div>\n              </Col>\n              <Col xs={5}>\n                <Link to='/product/3d'>Natural Language Processing</Link>\n              </Col>\n            </Row>\n          </ul>\n        </li>\n        <li style={{ textAlign: 'left' }}>\n          <Link style={{ color: 'white' }} to='/' >\n            Contact Us\n        </Link>\n        </li>\n      </ul>\n    </>\n  )\n}\nfunction DropdownMobile(props: any): any {\n  let [showChildren, setShowChildren] = useState('none')\n  let [showParent, setShowParent] = useState('none')\n  useEffect(() => {\n    if (props.click === true) setShowParent('block')\n    else {\n      setShowParent('none')\n      setShowChildren('none')\n    }\n  }, [props])\n  let onClick = (e: any) => {\n    if (showChildren === 'none') setShowChildren('block')\n    else setShowChildren('none')\n  }\n  return (\n    <ul style={{\n      paddingLeft: '1rem', position: 'absolute', height: '55vh',\n      top: '80px', width: '100%', display: `${showParent}`,\n      listStyle: 'none', backgroundColor: '#002a56', left: '0'\n    }} >\n      <li style={{ textAlign: 'left' }}>\n        <Link style={{ color: 'white' }} to='/' >\n          Home\n        </Link>\n      </li>\n      <li style={{ textAlign: 'left' }}>\n        <div onClick={onClick}>\n          Product <i className='fas fa-caret-down' />\n        </div>\n\n        <ul style={{ paddingLeft: '2rem', listStyle: 'none', display: `${showChildren}` }}  >\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product' >\n              3D/VR/AR\n            </Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/' >\n              Object Detection\n            </Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product/ocr'>Optical Character Recognition</Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product/is'>Image Synthesis</Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product/tts'>Text To Speech</Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product/stt'>Speech To Text</Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product/ss'>Speech Synthesis</Link>\n          </li>\n          <li style={{ textAlign: 'left' }}>\n            <Link style={{ color: 'white' }} to='/product/3d'>Natural Language Processing</Link>\n          </li>\n        </ul>\n      </li>\n      <li style={{ textAlign: 'left' }}>\n        <Link style={{ color: 'white' }} to='/' >\n          Contact Us\n        </Link>\n      </li>\n\n\n    </ul>\n  )\n\n}\nexport default function Dropdown(props: any): any {\n  useEffect(() => {\n\n  }, [props])\n  switch (props.responsive) {\n    case 'left':\n      return <DropdownMobile click={props.click} />\n    case 'center':\n      return <DropdownDesktop />\n  }\n\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css'\nimport Dropdown from './Dropdown'\n\n\n\nfunction Navbar() {\n  const [click, setClick] = useState(false)\n  const [dropdown, setDropdown] = useState(false)\n  let [isShow, setIsShow] = useState('none')\n  let [responsive, setResponsive] = useState({\n    logo: 'left'\n  })\n  const handleClick = () => setClick(!click)\n  const closeMobileMenu = () => setClick(false)\n  let maxWidth = 960\n\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < maxWidth) {\n        responsive.logo = 'left'\n      }\n      else {\n        responsive.logo = 'center'\n      }\n      setResponsive({ ...responsive })\n    }\n    window.addEventListener(\"resize\", handleResize)\n    handleResize()\n  }, [])\n\n\n  const onMouseEnter = () => {\n    if (window.innerWidth < maxWidth) {\n      setDropdown(false)\n    } else {\n      setDropdown(true)\n    }\n  }\n\n  const onMouseLeave = () => {\n    if (window.innerWidth < maxWidth) {\n      setDropdown(true)\n    } else {\n      setDropdown(false)\n    }\n  }\n  let onClick = (e) => {\n    if (window.innerWidth < maxWidth) {\n      if (isShow === 'none') setIsShow('block')\n      else setIsShow('none')\n    }\n  }\n\n  return (\n    <>\n      <nav className='navbar' style={{ justifyContent: `${responsive.logo}` }}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img style={{ width: '4rem', borderRadius: '50%' }} src='./raccoon.webp' />\n          <h2>\n            PicoCat\n          </h2>\n        </div>\n        <div className='menu-icon' onClick={handleClick}>\n          <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n        </div>\n        <Dropdown responsive={responsive.logo} click={click} />\n      </nav>\n    </>\n  )\n}\nexport default Navbar\n","import React from 'react';\nimport '../../App.css';\n\nexport default function Home() {\n  return (\n    <>\n      <h1 className='home'>EPIC</h1>\n    </>\n  );\n}\n","import { useGLTF } from '@react-three/drei';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { TextureLoader, RepeatWrapping, NearestFilter, LinearMipMapLinearFilter } from 'three';\nfunction Chair(props) {\n    const { nodes, materials } = useGLTF('./chair.glb')\n    let textureList = ['./texture/wood1.jpg', './texture/wood.jpg',\n        './texture/wood2.jpg', './texture/wood3.jpg', './texture/grass.jpg']\n    const texture = new TextureLoader().load(textureList[0])\n    // texture.magFilter = NearestFilter;\n    // texture.minFilter = LinearMipMapLinearFilter;\n    // texture.wrapS = RepeatWrapping;\n    // texture.wrapT = RepeatWrapping;\n    // texture.repeat.set(200, 200);\n    const ref = useRef()\n    // let map = new Map()\n    // map['back'] = {\n    //     color: new TextureLoader().load(textureList[0]),\n    //     isSelect: true\n    // }\n    // map['cushions'] = {\n    //     color: new TextureLoader().load(textureList[1]),\n    //     isSelect: false\n    // }\n    // map['base'] = {\n    //     color: new TextureLoader().load(textureList[2]),\n    //     isSelect: false\n    // }\n    // map['legs'] = {\n    //     color: new TextureLoader().load(textureList[3]),\n    //     isSelect: false\n    // }\n    // map['supports'] = {\n    //     color: new TextureLoader().load(textureList[4]),\n    //     isSelect: false\n    // }\n    // let [items, setItems] = useState(map)\n\n    let [items, setItems] = useState([\n        { name: 'back', color: new TextureLoader().load(textureList[0]), isSelect: false },\n        { name: 'cushions', color: new TextureLoader().load(textureList[1]), isSelect: false },\n        { name: 'base', color: new TextureLoader().load(textureList[2]), isSelect: false },\n        { name: 'legs', color: new TextureLoader().load(textureList[3]), isSelect: false },\n        { name: 'supports', color: new TextureLoader().load(textureList[4]), isSelect: false },\n    ])\n    useEffect(() => {\n\n        let tmp = items.map(e => {\n            if (e.isSelect === true) e.color = new TextureLoader().load(props.color)\n            return e\n        })\n        setItems(tmp)\n    }, [props.color])\n    let choose = (e) => {\n        let tmp = items.map(f => {\n            if (f.name === e) f.isSelect = true\n            else f.isSelect = false\n            return f\n        })\n        props.changeItem(e)\n        setItems(tmp)\n    }\n    return (\n        <group\n            scale={1.2}\n            dispose={null}\n            position={(0, 0, 0)}\n        >\n            <mesh onClick={() => { choose('back') }} geometry={nodes.back.geometry} material={materials.laces}\n            // material-color={items[0].color} \n            >\n                <meshStandardMaterial map={items[0].color} attach=\"material\" />\n            </mesh>\n            <mesh onClick={() => { choose('cushions') }} geometry={nodes.cushions.geometry} material={materials.laces}\n            // material-color={items[1].color} \n            >\n                <meshStandardMaterial map={items[1].color} attach=\"material\" />\n            </mesh>\n            <mesh onClick={() => { choose('base') }} geometry={nodes.base.geometry} material={materials.laces}\n            // material-color={items[2].color}\n            >\n                <meshStandardMaterial map={items[2].color} attach=\"material\" />\n\n            </mesh>\n            <mesh onClick={() => { choose('legs') }} geometry={nodes.legs.geometry} material={materials.laces}\n            // material-color={items[3].color} \n            >\n                <meshStandardMaterial map={items[3].color} attach=\"material\" />\n            </mesh>\n            <mesh onClick={() => { choose('supports') }} geometry={nodes.supports.geometry} material={materials.laces}\n            // material-color={items[4].color} \n            >\n                <meshStandardMaterial map={items[4].color} attach=\"material\" />\n            </mesh>\n        </group>\n    )\n}\nexport {\n    Chair,\n}","import React, { MouseEvent, useEffect, useRef, useState } from 'react';\nlet mouse = {\n    x: 0,\n    y: 0\n}\nclass Circle {\n    x: number\n    y: number\n    dx: number\n    dy: number\n    radius = 1\n    c: CanvasRenderingContext2D\n    w: number\n    h: number\n    color: string\n    maxRadius = 10\n    constructor(x: number, y: number, dx: number, dy: number, radius: number, ctx: any, w: number, h: number, color: string) {\n        this.x = x\n        this.y = y\n        this.dx = dx\n        this.dy = dy\n        // this.radius = radius\n        this.c = ctx\n        this.w = w\n        this.h = h\n        this.color = color\n    }\n    update(): Map<string, number> {\n        if (this.x + this.radius > this.w || this.x - this.radius < 0)\n            this.dx = -this.dx\n        if (this.y + this.radius > this.h || this.y - this.radius < 0)\n            this.dy = -this.dy\n        this.x += this.dx\n        this.y += this.dy\n        let map = new Map()\n\n        if (this.x > mouse.x - 200 && this.x < mouse.x + 200 && this.y > mouse.y - 200 && this.y < mouse.y + 200)\n        // this.radius = 14\n        {\n            map.set('x', this.x)\n            map.set('y', this.y)\n        }\n        // else\n        this.draw()\n        return map\n        // this.radius = 1\n        // this.draw()\n    }\n    draw() {\n        this.c.beginPath()\n        this.c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n        this.c.strokeStyle = 'white'\n        this.c.stroke()\n        this.c.fillStyle = 'white'\n        this.c.fill()\n        // this.c.clearRect(0, 0, window.innerWidth, 1000)\n    }\n\n}\n\nfunction IntroduceThreeDesktop(props: any) {\n    let ref = useRef<HTMLCanvasElement>(null);\n    let ctx: CanvasRenderingContext2D\n    let circleList: Circle[] = []\n    let N = 70\n    let heigh = 400\n    let colorList = ['#ed1a1a', '#31ed1a', '#1a20ed', '#d0e714']\n    let text = 'Commerce is the new way of shopping. Here highly accurate 3D models ' +\n        'of products integrate with Augmented Reality experiences to show the customer ' +\n        'a graphic and interactive representation of the product. It is a pleasant ' +\n        'consequence of visual commerce. 3D technology allows customers to get in touch ' +\n        'with the product, exactly as it happens in store. It offers a new way to interact ' +\n        'with products. Customers can view them from any angle, rotate them, zoom in ' +\n        'and so on. They can do everything they would do in real life. The opportunities ' +\n        'that 3D and AR Commerce offers are innumerable.'\n    let splits = text.split(' ')\n    let lines: string[] = []\n    let fontSize = 17\n    let maxLineLength = 1200\n    let start = -1\n    let seperate = () => {\n        let line = ''\n        let lineLength = 0\n        while (lineLength <= maxLineLength && start < splits.length - 1) {\n            start += 1\n            line += ' ' + splits[start]\n            lineLength += fontSize * (splits[start].split('').length + 1)\n        }\n        lines.push(line)\n        if (start < splits.length - 1)\n            seperate()\n    }\n    seperate()\n\n    function randomIntFromTo(min: number, max: number) { // min and max included \n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n    let animate = () => {\n        let connections = []\n        ctx.clearRect(0, 0, window.innerWidth, heigh)\n        for (let index = 0; index < N; index++) {\n            let interaction = circleList[index].update()\n            if (interaction.size !== 0)\n                connections.push(interaction)\n        }\n        ctx.lineWidth = 0.1\n        for (let index = 0; index < connections.length; index++) {\n            let queueElement = connections.shift()\n            for (let i = 0; i < connections.length; i++) {\n                const element = connections[i]\n                ctx.beginPath()\n                ctx.moveTo(queueElement.get('x'), queueElement.get('y'))\n                ctx.lineTo(element.get('x'), element.get('y'))\n                ctx.strokeStyle = 'white'\n                ctx.stroke()\n            }\n        }\n        var lineheight = 25;\n        let x = window.innerWidth / 7\n        let y = 90\n        ctx.fillStyle = \"white\";\n        ctx.font = \"30pt Times New Roman\";\n        ctx.fillText('3D', x, y)\n        y = y + lineheight\n        ctx.font = '17px Font name';\n        for (var i = 0; i < lines.length; i++)\n            ctx.fillText(lines[i], x, y + (i * lineheight));\n        requestAnimationFrame(animate)\n    }\n    let mouseMove = (e: MouseEvent) => {\n        mouse.x = e.clientX\n        mouse.y = e.clientY\n    }\n    useEffect(() => {\n        if (ref.current) {\n            let canvas = ref.current\n            canvas.width = window.innerWidth\n            canvas.height = heigh\n            ctx = canvas.getContext('2d')\n            if (ctx != null) {\n                for (let index = 0; index < N; index++) {\n                    let x = Math.random() * window.innerWidth\n                    let y = Math.random() * canvas.height\n                    let dx = Math.random() - 0.5\n                    let dy = Math.random() - 0.5\n                    let color = colorList[randomIntFromTo(0, 3)]\n                    circleList.push(new Circle(x, y, dx, dy, 4, ctx, window.innerWidth, heigh, color))\n                }\n                animate()\n\n            }\n        }\n    }, [props])\n    return (\n        <canvas style={{ backgroundColor: '#002a56' }} onMouseMove={mouseMove} ref={ref}></canvas>\n    )\n}\nfunction IntroduceThreeMobile(props: any) {\n    let ref = useRef<HTMLCanvasElement>(null);\n    let ctx: CanvasRenderingContext2D\n    let circleList: Circle[] = []\n    let N = 70\n    let heigh = 400\n    let colorList = ['#ed1a1a', '#31ed1a', '#1a20ed', '#d0e714']\n    let text = 'Commerce is the new way of shopping. Here highly accurate 3D models ' +\n        'of products integrate with Augmented Reality experiences to show the customer ' +\n        'a graphic and interactive representation of the product. It is a pleasant ' +\n        'consequence of visual commerce. 3D technology allows customers to get in touch ' +\n        'with the product, exactly as it happens in store. It offers a new way to interact ' +\n        'with products. Customers can view them from any angle, rotate them, zoom in ' +\n        'and so on. They can do everything they would do in real life. The opportunities ' +\n        'that 3D and AR Commerce offers are innumerable.'\n    let splits = text.split(' ')\n    let lines: string[] = []\n    let fontSize = 17\n    // let maxLineLength = 1000\n    // let [maxLineLength, setMaxLineLength] = useState(0)\n    let start = -1\n    let seperate = (maxLineLength: number) => {\n        let line = ''\n        let lineLength = 0\n        while (lineLength <= maxLineLength && start < splits.length - 1) {\n            start += 1\n            line += ' ' + splits[start]\n            lineLength += fontSize * (splits[start].split('').length + 1)\n        }\n        lines.push(line)\n        if (start < splits.length - 1)\n            seperate(maxLineLength)\n    }\n\n    function randomIntFromTo(min: number, max: number) { // min and max included \n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n    let animate = () => {\n        let connections = []\n        ctx.clearRect(0, 0, window.innerWidth, heigh)\n        for (let index = 0; index < N; index++) {\n            let interaction = circleList[index].update()\n            if (interaction.size !== 0)\n                connections.push(interaction)\n        }\n        ctx.lineWidth = 0.1\n        for (let index = 0; index < connections.length; index++) {\n            let queueElement = connections.shift()\n            for (let i = 0; i < connections.length; i++) {\n                const element = connections[i]\n                ctx.beginPath()\n                ctx.moveTo(queueElement.get('x'), queueElement.get('y'))\n                ctx.lineTo(element.get('x'), element.get('y'))\n                ctx.strokeStyle = 'white'\n                ctx.stroke()\n            }\n        }\n        var lineHeight = 25;\n        let x = window.innerWidth / 2\n        let y = 90\n        ctx.textAlign = 'center'\n        ctx.fillStyle = \"white\";\n        ctx.font = \"30pt Times New Roman\";\n        ctx.fillText('3D', x, y)\n        y = y + lineHeight\n        ctx.font = '17px Font name';\n        for (var i = 0; i < lines.length; i++)\n            ctx.fillText(lines[i], x, y + (i * lineHeight));\n        requestAnimationFrame(animate)\n    }\n    let mouseMove = (e: MouseEvent) => {\n        mouse.x = e.clientX\n        mouse.y = e.clientY\n    }\n    useEffect(() => {\n        // maxLineLength = window.innerWidth * 0.8\n        // let result: [] = []\n        // seperate(splits, result)\n        // setLines(result)\n\n        // setMaxLineLength(maxLineLength)\n        if (ref.current) {\n            let canvas = ref.current\n            canvas.width = window.innerWidth\n            canvas.height = heigh\n            ctx = canvas.getContext('2d')\n            seperate(props.longestLine)\n\n            if (ctx != null) {\n                for (let index = 0; index < N; index++) {\n                    let x = Math.random() * window.innerWidth\n                    let y = Math.random() * canvas.height\n                    let dx = Math.random() - 0.5\n                    let dy = Math.random() - 0.5\n                    let color = colorList[randomIntFromTo(0, 3)]\n                    circleList.push(new Circle(x, y, dx, dy, 4, ctx, window.innerWidth, heigh, color))\n                }\n                animate()\n\n            }\n        }\n    }, [props])\n    return (\n        <>\n            <canvas style={{ backgroundColor: '#002a56' }} onMouseMove={mouseMove} ref={ref}></canvas>\n        </>\n    )\n}\nexport default function Introduce(props: any): any {\n    useEffect(() => {\n\n    }, [props])\n    switch (props.responsive) {\n        case 'mobile':\n            return <IntroduceThreeMobile responsive={props.responsive} longestLine={props.longestLine} />\n        case 'desktop':\n            return <IntroduceThreeDesktop responsive={props.responsive} longestLine={props.longestLine}/>\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Canvas } from \"@react-three/fiber\"\nimport { OrbitControls } from \"@react-three/drei\"\nimport { Chair } from '../model/threeDModel'\nimport { Col, Row } from 'react-bootstrap'\nimport { DefaultXRControllers } from '@react-three/xr'\nimport Introduce from '../introduce/IntroduceThreeD'\n// import ShowRoom from '../model/ShowRoom'\n\nlet ContentDesktop = () => {\n    let textureList = ['./texture/wood.jpg', './texture/wood1.jpg',\n        './texture/wood2.jpg', './texture/wood3.jpg', './texture/grass.jpg', './texture/1.jpg', './texture/2.jpg']\n\n    let changeTexture = (e) => {\n        setColor(e)\n    }\n    let [color, setColor] = useState('./texture/wood.jpg')\n    let [item, setItem] = useState('back')\n    let changeItem = (e) => {\n        setItem(e)\n    }\n    return (\n        <Row>\n            <Col></Col>\n            <Col>\n                <Row style={{ textAlign: 'center' }}>\n                    <Col>\n                        <h3>Textures</h3>\n                    </Col>\n                </Row>\n                <Row >\n                    {textureList.map(e =>\n                        <Col xs={3} onClick={() => { changeTexture(e) }}\n                            style={{ borderRadius: '6px', backgroundImage: `url(${e})`, height: '80px' }} >\n                        </Col>\n                    )}\n                </Row>\n            </Col>\n            <Col>\n\n                <div>\n                    <Canvas style={{ height: '30rem', width: '34rem' }} camera={{ position: [0, 20, 0] }}>\n                        <ambientLight />\n                        <Chair color={color} changeItem={changeItem} />\n                        <OrbitControls />\n                        {/* <DefaultXRControllers /> */}\n                    </Canvas>\n                    <h3 style={{ width: '34rem', textAlign: 'center' }}>{item}</h3>\n                </div>\n\n            </Col>\n            <Col>\n            </Col>\n        </Row>\n    )\n\n}\nlet ContentMobile = () => {\n    let textureList = ['./texture/wood.jpg', './texture/wood1.jpg',\n        './texture/wood2.jpg', './texture/wood3.jpg', './texture/grass.jpg', './texture/1.jpg', './texture/2.jpg']\n\n    let changeTexture = (e) => {\n        setColor(e)\n    }\n    let [color, setColor] = useState('./texture/wood.jpg')\n    let [item, setItem] = useState('back')\n    let changeItem = (e) => {\n        setItem(e)\n    }\n    return (\n        <>\n            <div style={{ marginLeft: '10%', width: '80%' }}>\n                <div style={{ textAlign: 'center' }}>\n                    <div>\n                        <h3>Textures</h3>\n                    </div>\n                </div>\n                <Row >\n                    {textureList.map(e =>\n                        <Col xs={3} onClick={() => { changeTexture(e) }}\n                            style={{ borderRadius: '6px', backgroundImage: `url(${e})`, height: '80px' }} >\n                        </Col>\n                    )}\n                </Row >\n            </div>\n            <div>\n                <div style={{ marginLeft: '5%', width: '90%' }} >\n                    <div style={{\n                        textAlign: 'center', borderRadius: '5px',\n                        borderWidth: '2px', borderStyle: 'solid', borderColor: '#bac5d1'\n                    }}>\n\n                        <Canvas style={{ height: '30rem', width: '100%' }} camera={{ position: [0, 20, 0] }}>\n                            <ambientLight />\n                            <Chair color={color} changeItem={changeItem} />\n                            <OrbitControls />\n                            {/* <DefaultXRControllers /> */}\n                        </Canvas>\n                        <h3 >{item}</h3>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n\n}\nexport default function ThreeD() {\n    let [responsive, setResponsive] = useState('desktop')\n    let [longestLine, setLongestLine] = useState(100)\n\n    let [color, setColor] = useState('./texture/wood.jpg')\n    let [item, setItem] = useState('back')\n    let changeItem = (e) => {\n        setItem(e)\n    }\n    let textureList = ['./texture/wood.jpg', './texture/wood1.jpg',\n        './texture/wood2.jpg', './texture/wood3.jpg', './texture/grass.jpg', './texture/1.jpg', './texture/2.jpg']\n\n    let changeTexture = (e) => {\n        setColor(e)\n    }\n    let [content, setContent] = useState(<ContentDesktop />)\n    useEffect(() => {\n        let maxWidth = 960\n        function handleResize() {\n            if (window.innerWidth < maxWidth) {\n                responsive = 'mobile'\n                setContent(<ContentMobile />)\n            }\n            else {\n                responsive = 'desktop'\n                setContent(<ContentDesktop />)\n            }\n\n            setResponsive(responsive)\n            setLongestLine(window.innerWidth * 1.4)\n        }\n        window.addEventListener(\"resize\", handleResize)\n        handleResize()\n    }, [])\n    return (\n        <div>\n            <Introduce responsive={responsive} longestLine={longestLine} />\n            <div>\n                <h2 style={{ textAlign: 'center' }}>Demo</h2>\n\n                {content}\n\n            </div>\n            <div>\n                <h3 style={{ textAlign: 'center' }}>Show Room</h3>\n            </div>\n        </div>\n\n    )\n}\n","import React from 'react';\nimport { useState } from 'react'\nimport { DefaultXRControllers, ARCanvas, Interactive } from '@react-three/xr'\nimport './styles.css'\nimport { OrbitControls } from '@react-three/drei';\n\nfunction Box({ color, size, scale, children, ...rest }: any) {\n  return (\n    <mesh scale={scale} {...rest}>\n      <boxBufferGeometry attach=\"geometry\" args={size} />\n      <meshPhongMaterial attach=\"material\" color={color} />\n      {children}\n    </mesh>\n  )\n}\nfunction Button(props: any) {\n  const [hover, setHover] = useState(false)\n  const [color, setColor] = useState<any>('blue')\n\n  const onSelect = () => {\n    setColor((Math.random() * 0xffffff) | 0)\n  }\n\n  return (\n    <Interactive onHover={() => setHover(true)} onBlur={() => setHover(false)} onSelect={onSelect}>\n      <Box color={color} scale={hover ? [0.6, 0.6, 0.6] : [0.5, 0.5, 0.5]} size={[0.4, 0.1, 0.1]} {...props}>\n          Hello react-xr!\n      </Box>\n    </Interactive>\n  )\n}\n\n\nexport default function Ar() {\n  return (\n    <div >\n      <ARCanvas>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Button position={[0, 0.1, -0.2]} />\n        <DefaultXRControllers />\n        {/* <OrbitControls {} /> */}\n      </ARCanvas>\n    </div>\n\n  )\n}\n","import React, { MouseEvent, useEffect, useRef } from 'react';\nlet mouse = {\n    x: 0,\n    y: 0\n}\nclass Circle {\n    x: number\n    y: number\n    dx: number\n    dy: number\n    radius = 1\n    c: CanvasRenderingContext2D\n    w: number\n    h: number\n    color: string\n    maxRadius = 10\n    constructor(x: number, y: number, dx: number, dy: number, radius: number, ctx: any, w: number, h: number, color: string) {\n        this.x = x\n        this.y = y\n        this.dx = dx\n        this.dy = dy\n        // this.radius = radius\n        this.c = ctx\n        this.w = w\n        this.h = h\n        this.color = color\n    }\n    update(): Map<string, number> {\n        if (this.x + this.radius > this.w || this.x - this.radius < 0)\n            this.dx = -this.dx\n        if (this.y + this.radius > this.h || this.y - this.radius < 0)\n            this.dy = -this.dy\n        this.x += this.dx\n        this.y += this.dy\n        let map = new Map()\n\n        if (this.x > mouse.x - 150 && this.x < mouse.x + 150 && this.y > mouse.y - 150 && this.y < mouse.y + 150)\n        // this.radius = 14\n        {\n            map.set('x', this.x)\n            map.set('y', this.y)\n        }\n        // else\n        this.draw()\n        return map\n        // this.radius = 1\n        // this.draw()\n    }\n    draw() {\n        this.c.beginPath()\n        this.c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n        this.c.strokeStyle = 'white'\n        this.c.stroke()\n        this.c.fillStyle = 'white'\n        this.c.fill()\n        // this.c.clearRect(0, 0, window.innerWidth, 1000)\n    }\n\n}\n\nexport function Animation() {\n    let ref = useRef<HTMLCanvasElement>(null);\n    let ctx: CanvasRenderingContext2D\n    let circleList: Circle[] = []\n    let N = 70\n    let colorList = ['#ed1a1a', '#31ed1a', '#1a20ed', '#d0e714']\n    function randomIntFromTo(min: number, max: number) { // min and max included \n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n    let animate = () => {\n        let connections = []\n        ctx.clearRect(0, 0, window.innerWidth, 700)\n        for (let index = 0; index < N; index++) {\n            let interaction = circleList[index].update()\n            if (interaction.size !== 0)\n                connections.push(interaction)\n        }\n        for (let index = 0; index < connections.length; index++) {\n            let queueElement = connections.shift()\n            for (let i = 0; i < connections.length; i++) {\n                const element = connections[i]\n                ctx.beginPath()\n                ctx.moveTo(queueElement.get('x'), queueElement.get('y'))\n                ctx.lineTo(element.get('x'), element.get('y'))\n                ctx.strokeStyle = '#19ffff'\n                ctx.stroke()\n            }\n        }\n\n        requestAnimationFrame(animate)\n    }\n    let mouseMove = (e: MouseEvent) => {\n        mouse.x = e.clientX\n        mouse.y = e.clientY\n    }\n    useEffect(() => {\n        if (ref.current) {\n            let canvas = ref.current\n            canvas.width = window.innerWidth\n            canvas.height = 700\n            ctx = canvas.getContext('2d')\n            if (ctx != null) {\n                for (let index = 0; index < N; index++) {\n                    let x = Math.random() * window.innerWidth\n                    let y = Math.random() * canvas.height\n                    let dx = Math.random() - 0.5\n                    let dy = Math.random() - 0.5\n                    let color = colorList[randomIntFromTo(0, 3)]\n                    circleList.push(new Circle(x, y, dx, dy, 4, ctx, window.innerWidth, 700, color))\n                }\n                animate()\n\n            }\n        }\n    }, [])\n    return (\n        <>\n            <canvas style={{ backgroundColor: '#002a56' }} onMouseMove={mouseMove} ref={ref}></canvas>\n        </>\n    )\n}","import React, { Suspense } from 'react';\nimport Navbar from './components/Navbar';\nimport Home from './components/pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ThreeD from './components/pages/ThreeD';\nimport Ar from './components/pages/Ar';\nimport { Animation } from './components/pages/Animation';\nexport default function App() {\n  return (\n    <Router >\n      <Navbar />\n      <Suspense fallback={null}>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/product' component={ThreeD} />\n          <Route path='/ar' component={Ar} />\n          <Route path='/animation' component={Animation} />\n        </Switch>\n      </Suspense>\n    </Router>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}